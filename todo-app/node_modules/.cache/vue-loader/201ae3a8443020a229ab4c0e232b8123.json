{"remainingRequest":"/Users/jerry/dearyeon/vue_study/todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jerry/dearyeon/vue_study/todo-app/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/jerry/dearyeon/vue_study/todo-app/src/App.vue","mtime":1599457977694},{"path":"/Users/jerry/dearyeon/vue_study/todo-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerry/dearyeon/vue_study/todo-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jerry/dearyeon/vue_study/todo-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jerry/dearyeon/vue_study/todo-app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerry/dearyeon/vue_study/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerry/dearyeon/vue_study/todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiLi9hc3NldHMvc3R5bGUvX3Jlc2V0IjsKCi50b3AgewogIHdpZHRoOiAxMDAlOwogIG1pbi1oZWlnaHQ6IDQzLjZyZW07CiAgcGFkZGluZzogMCAkcGFkZGluZyA0LjVyZW07CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjMzc3MGNjIDIwJSwgI2NlOTFjOSA4NCUpOwp9CgouYm9keSB7CiAgcGFkZGluZzogM3JlbSAkcGFkZGluZzsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZlZmVmOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Modal v-show=\"showModal\" v-on:close=\"showModal = false\">\n      <template v-slot:modal-text>{{ modalText }}</template>\n    </Modal>\n    <div class=\"top\">\n      <TodoHeader />\n      <div v-if=\"userName\">\n        <TodoTitle v-bind:propCount=\"checkCount\" v-bind:propName=\"userName\" />\n        <TodoInput v-on:addItem=\"addOneItem\" />\n      </div>\n      <div v-else>\n        <TodoHello v-on:addName=\"addUserName\" />\n      </div>\n    </div>\n    <div class=\"body\">\n        <TodoController v-on:clearAll=\"clearAllItem\" v-on:sortItem=\"sortAllItem\" />\n        <TodoList \n          v-bind:propItems=\"todoItems\" \n          v-on:removeItem=\"removeOneItem\" \n          v-on:toggleItem=\"toggleOneItem\"\n          v-bind:propEmpty=\"isEmpty\"\n        />\n      <TodoFooter />\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport TodoHeader from \"./components/TodoHeader\";\nimport TodoTitle from \"./components/TodoTitle\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoController from \"./components/TodoController\";\nimport TodoList from \"./components/TodoList\";\nimport TodoFooter from \"./components/TodoFooter\";\nimport TodoHello from \"./components/TodoHello\";\nimport Modal from \"./components/common/Modal\";\nimport getDate from \"./assets/commonJS/getDate.js\";\n\nexport default {\n  name: \"App\",\n  components: {\n    TodoHeader,\n    TodoTitle,\n    TodoInput,\n    TodoController,\n    TodoList,\n    TodoFooter,\n    TodoHello,\n    Modal\n  },\n  data() {\n    return {\n      todoItems: [],\n      userName: \"\",\n      showModal: false,\n      modalText: \"\"\n    };\n  },\n  methods: {\n    addOneItem(todoItem) {\n      // 빈 내용일 경우\n      if(todoItem === \"\") {\n        this.showModal = !this.showModal;\n        this.modalText = \"The form is empty. Please enter your task.\";\n        return false;\n      }\n      // 중복되는 내용일 경우\n      for(let i = 0; i < this.todoItems.length; i++) {\n        if(this.todoItems[i].item === todoItem) {\n          this.showModal = !this.showModal;\n          this.modalText = \"I think you've already had the task.\";\n          return false;\n        }\n      }\n      // 저장할 정보\n      var value = {\n        item: todoItem,\n        date: `${getDate().date} ${getDate().week}`,\n        time: getDate().time,\n        completed: false\n      };\n      localStorage.setItem(todoItem, JSON.stringify(value));\n      this.todoItems.push(value);\n    },\n    removeOneItem(todoItem, index) {\n      localStorage.removeItem(todoItem.item);\n      this.todoItems.splice(index, 1);\n    },\n    toggleOneItem(todoItem) {\n      todoItem.completed = !todoItem.completed;\n      localStorage.setItem(todoItem.item, JSON.stringify(todoItem));\n    },\n    clearAllItem() {\n      this.todoItems = [];\n      localStorage.clear();\n    },\n    sortTodoLatest() {\n      this.todoItems.sort(function(a,b) {\n        return b.time - a.time;\n      });\n    },\n    sortTodoOldest() {\n      this.todoItems.sort(function(a,b) {\n        return a.time - b.time;\n      });\n    },\n    sortAllItem(selectedSort) {\n      if(selectedSort.value === \"date-desc\") {\n        this.sortTodoLatest();\n      } else if (selectedSort.value === \"date-asc\") {\n        this.sortTodoOldest();\n      }\n    },\n    addUserName(userName) {\n      localStorage.setItem(\"userName\", userName);\n      this.userName = userName;\n    }\n  },\n  created() {\n    this.userName = localStorage.getItem(\"userName\");\n\n    if(localStorage.length > 0) {\n      for(let i = 0; i < localStorage.length; i++) {\n        if(localStorage.key(i) !== \"userName\") {\n          this.todoItems.push(\n            JSON.parse(localStorage.getItem(localStorage.key(i)))\n          );\n        }\n      }\n    }\n  },\n  computed: {\n    checkCount() {\n      const checkLeftItems = () => {\n        let leftCount = 0;\n        for(let i = 0; i < this.todoItems.length; i++) {\n          if(this.todoItems[i].completed === false) {\n            leftCount++;\n          }\n        }\n        return leftCount;\n      };\n\n      const count = {\n        total: this.todoItems.length,\n        left: checkLeftItems()\n      };\n      return count;\n    },\n    isEmpty() {\n      return this.todoItems.length <= 0 ? true : false;\n    }\n  },\n  mounted() {\n    this.sortTodoOldest();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./assets/style/_reset\";\n\n.top {\n  width: 100%;\n  min-height: 43.6rem;\n  padding: 0 $padding 4.5rem;\n  background-image: linear-gradient(45deg, #3770cc 20%, #ce91c9 84%);\n}\n\n.body {\n  padding: 3rem $padding;\n  background-color: #efefef;\n}\n</style>"]}]}